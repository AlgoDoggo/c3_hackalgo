#pragma version 6

// This whole app works with a single transaction
global GroupSize
int 1
==
assert

// Allow creation
txn ApplicationID
bz allow

// Since the contract involves a "sensitive" RekeyTo transaction we're making it immutable
txn OnCompletion
int UpdateApplication
!=
txn OnCompletion
int DeleteApplication
!=
&&
txn OnCompletion
int CloseOut
!=
&&
assert

// We're adding the following because it is mentioned in the Gitcoin bounty.
// Skipping this assert would not be an issue since the inner transaction would fail
// if the app didn't have signing authority over the user account.

// Check the rekeyTo field is set to the app
txn RekeyTo
global CurrentApplicationAddress
==
assert


// The deposit is either a pay transaction or an asset transfer
// By convention we'll say that appArgs is [amount]
// foreignAssets is either empty for an algo deposit or equal to [assetID] for an asset deposit

// Empty foreignAssets means it's a payment
txn NumAssets
int 0
==
bnz pay_deposit

// One foreignAsset means it's an asset transfer
txn NumAssets
int 1
==
bnz axfer_deposit

// If there is more than one foreignAsset, something is not right
err


pay_deposit:

// start drafting the inner transaction
itxn_begin

// it's a payment
int pay
itxn_field TypeEnum

// payment amount is first Arg
txna ApplicationArgs 0
btoi
itxn_field Amount

// Receiver is the app
global CurrentApplicationAddress
itxn_field Receiver

b finish_innertx // the rest of the innerTx fields are common to pay/axfer operations


axfer_deposit:

// start drafting the inner transaction
itxn_begin

// Check if the app is already-opted in the asset
global CurrentApplicationAddress
int 0
asset_holding_get AssetBalance //top value is opt-in prop, bottom value is actual balance
swap // we're only interested in the opt-in prop, let's swap and pop the asset balance
pop
bnz continue_axfer // Skip the opt-in if the app is already opted-in

// opt-in is an asset transfer
int axfer
itxn_field TypeEnum

// transfer amount is 0 for opt-in
int 0
itxn_field AssetAmount

// assetID is the integer in the foreignAssets array
txna Assets 0
itxn_field XferAsset

// Receiver is the app
global CurrentApplicationAddress
itxn_field AssetReceiver

// Sender is the app
global CurrentApplicationAddress
itxn_field Sender

// Since the sender is the app, let's set the Fee to 0, the user will pay that fee in the deposit tx
int 0
itxn_field Fee

// after the opt-in we'll draft the actual deposit
itxn_next

// The deposit tx will pay for the opt-in fee as well, so the fee is 2x the min fee
global MinTxnFee
int 2
*
itxn_field Fee

continue_axfer:

// it's an asset transfer
int axfer
itxn_field TypeEnum

// transfer amount is first arg
txna ApplicationArgs 0
btoi
itxn_field AssetAmount

// assetID is the integer in the foreignAssets array
txna Assets 0
itxn_field XferAsset

// Receiver is the app
global CurrentApplicationAddress
itxn_field AssetReceiver


finish_innertx:

// Sender is the user
txn Sender
itxn_field Sender

// Rekey the user account back to the user
txn Sender
itxn_field RekeyTo

// Send the inner transaction
itxn_submit

allow:
int 1
